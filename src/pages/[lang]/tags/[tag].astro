---
import { languages } from "@/i18n/ui";
import { getLangFromUrl, useTranslations } from "@/i18n/utils";
import PostArchiveLayout from "@/layouts/PostArchiveLayout.astro";
import { GetTags, type Archive } from "@/utils/content";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

export async function getStaticPaths() {
  const allPaths = [];

  for (const lang of Object.keys(languages)) {
    const tags = await GetTags(lang);
    const tagList = Array.from(tags.keys());

    for (const tag of tagList) {
      allPaths.push({
        params: { lang, tag },
        props: { lang },
      });
    }
  }

  return allPaths;
}

const { lang: currentLang } = Astro.params;
const tags = await GetTags(currentLang);
const { tag } = Astro.params;

async function FormatArchiveMap() {
  const posts = tags.get(tag)!.posts;
  const tagName = tags.get(tag)!.name;
  const archiveMap = new Map<number, Array<Archive>>();
  posts.forEach((post) => {
    const year = post.date.getFullYear();
    if (archiveMap.has(year)) archiveMap.get(year)!.push(post);
    else archiveMap.set(year, [post]);
  });
  return { archiveMap, tagName };
}

const { archiveMap, tagName } = await FormatArchiveMap();
---

<PostArchiveLayout
  archiveMap={archiveMap}
  title={tagName}
  subTitle={t("pages.tags.archive")}
/>
